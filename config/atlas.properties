##############################
# ATLAS-RELATED PROPERTIES
##############################

# All resources must in this path
atlas.resourceDir = src/main/resources
model.path = ${atlas.resourceDir}/models

#################
# AtlasAnalyzer #
#################

## Tokenizer Filter
tokenizer.model = en-token.bin
sentenceDetector.model = en-sent.bin

## Parser Payload Filter
# NLP = OpenNLP Parser
# Berkeley = Berkeley Parser
parser.name = NLP
NLP.parser.model = en-parser-chunking.bin
Berkeley.parser.model = eng-sm6.gr

## Lemmatizer
lemmatizer.dict = en-lemmatizer.dict

## Synset Filter
# JWI = WordNet Synset Dictionary
# BN = BabelNet Synset Dictionary
# BNWN = Use BabelNet synset dictionary but produce WordNet synset
synsetDict.name = JWI

wordnet.dict.path = wordnet/dict

## POS Tags Mapper
# This mapper is used to convert parser pos tag to synset dictionary pos tag.
pos.mapper.path = ${atlas.resourceDir}/posmaps
JWI.pos.mapper.file = en-wn.map
BN.pos.mapper.file = en-bn.map
BNWN.pos.mapper.file = en-bn.map

## Stopwords Filter
# default = using the minimal 33 English stopwords set.
stopwords.use = true
stopwords.file = default
stopwords.path = ${atlas.resourceDir}/stopwords


####################
# AtlasQueryParser #
####################

## Synset Similarity
# The threshold of synset similarity (Any similarity below this threshold will be considered dissimilar)
# 0.4 is optimal for ADW comparator
synset.similarity.threshold = 0.4

## Synset Expansion
# false = Synset expansion only for the same type of POS tag.
# true = Synset expansion will expand to all POS tag.
synset.expansion.crossPOS = false

## Synset similarity comparator
# ADW for WordNet synset comparison (need to config wn30g.ppv.path in adw.properties file)
# Nasari for BabelNet synset comparison (need to config vector file type and filename down below)
synset.comparator.name = ADW

# Nasari synset vectors file directory
# unified: use unified vector embedding
# lexical: use lexical vector embedding
nasari.vector.type = unified
lexical.nasari.vectorFile = /home/mike/Documents/Index/Nasari/NASARI_lexical_english.txt
# Use compress algorithm to save memory for the lemma vectors. This will slower the loading and retrieval time
lexical.model.compress = false
unified.nasari.vectorFile = /home/mike/Documents/Index/Nasari/NASARI_unified_english.txt
# Embed vector not implemented
embed.nasari.vectorFile = //

